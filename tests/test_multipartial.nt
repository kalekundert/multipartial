test_multipartial:
  -
    id: 1d-args-scalar
    partials: multipartial[2](g, 1, 2)
    expected:
      0: g(1, 2)
      1: g(1, 2)
  -
    id: 1d-args-dim
    partials: multipartial[2](g, 1, dim(2, 3))
    expected:
      0: g(1, 2)
      1: g(1, 3)
  -
    id: 1d-args-put-int
    partials: multipartial[2](g, 1, put[0](2, 0), put[1](3, 0))
    expected:
      0: g(1, 2, 0)
      1: g(1, 0, 3)
  -
    id: 1d-args-put-slice
    partials: multipartial[3](g, 1, put[:2](2, 0), put[1:](3, 0))
    expected:
      0: g(1, 2, 0)
      1: g(1, 2, 3)
      2: g(1, 0, 3)
  -
    id: 1d-kwargs-scalar
    partials: multipartial[2](g, a=1, b=2)
    expected:
      0: g(a=1, b=2)
      1: g(a=1, b=2)
  -
    id: 1d-kwargs-dim
    partials: multipartial[2](g, a=1, b=dim(2,3))
    expected:
      0: g(a=1, b=2)
      1: g(a=1, b=3)
  -
    id: 1d-kwargs-put-int
    partials: multipartial[2](g, a=1, b=put[0](2, 0), c=put[1](3, 0))
    expected:
      0: g(a=1, b=2, c=0)
      1: g(a=1, b=0, c=3)
  -
    id: 1d-kwargs-put-slice
    partials: multipartial[3](g, a=1, b=put[:2](2, 0), c=put[1:](3, 0))
    expected:
      0: g(a=1, b=2, c=0)
      1: g(a=1, b=2, c=3)
      2: g(a=1, b=0, c=3)
  -
    id: 1d-infer-ndim
    partials: multipartial(g, 1, dim(2, 3))
    expected:
      0: g(1, 2)
      1: g(1, 3)
  -
    id: 1d-infer-shape
    partials: multipartial[:](g, 1, dim(2, 3))
    expected:
      0: g(1, 2)
      1: g(1, 3)
  -
    id: 1d-broadcast-scalar
    partials: multipartial[:](g, 1, Dim(2))
    expected:
      0: g(1, 2)
  -
    id: 1d-broadcast-scalar
    partials: multipartial[2](g, 1, Dim(2))
    expected:
      0: g(1, 2)
      1: g(1, 2)
  -
    id: 1d-broadcast-vector
    partials: multipartial[:](g, 1, Dim([2, 3]))
    expected:
      0: g(1, 2)
      1: g(1, 3)
  -
    id: 1d-err-wrong-dim
    partials: multipartial[2](g, 1, dim[1](2, 3))
    error:
      type: ValueError
      message: array has 1 dimension(s), but argument has 2
  -
    id: 1d-err-args-wrong-size
    partials: multipartial[2](g, 1, dim(2, 3, 4))
    error:
      type: ValueError
      message: expected 2 argument(s) for dimension 0, got 3
  -
    id: 1d-err-inconsistent-arg-sizes
    partials: multipartial[:](g, dim(1, 2), dim(3, 4, 5))
    error:
      type: ValueError
      message: found different-length arguments for dimension 0

  -
    id: 2d-args-scalar
    partials: multipartial[2,3](g, 1, 2)
    expected:
      0,0: g(1, 2)
      0,1: g(1, 2)
      0,2: g(1, 2)
      1,0: g(1, 2)
      1,1: g(1, 2)
      1,2: g(1, 2)
  -
    id: 2d-args-dim
    partials: multipartial[2,3](g, 1, dim[0](2, 3), dim[1](4, 5, 6))
    expected:
      0,0: g(1, 2, 4)
      0,1: g(1, 2, 5)
      0,2: g(1, 2, 6)
      1,0: g(1, 3, 4)
      1,1: g(1, 3, 5)
      1,2: g(1, 3, 6)
  -
    id: 2d-args-rows-cols
    partials: multipartial[2,3](g, 1, rows(2, 3), cols(4, 5, 6))
    expected:
      0,0: g(1, 2, 4)
      0,1: g(1, 2, 5)
      0,2: g(1, 2, 6)
      1,0: g(1, 3, 4)
      1,1: g(1, 3, 5)
      1,2: g(1, 3, 6)
  -
    id: 2d-args-put-int
    partials: multipartial[2,3](g, 1, put[0,0](2, 0), put[1,2](3, 0))
    expected:
      0,0: g(1, 2, 0)
      0,1: g(1, 0, 0)
      0,2: g(1, 0, 0)
      1,0: g(1, 0, 0)
      1,1: g(1, 0, 0)
      1,2: g(1, 0, 3)
  -
    id: 2d-args-put-slice
    partials: multipartial[2,3](g, 1, put[:,:2](2, 0), put[1:,1:](3, 0))
    expected:
      0,0: g(1, 2, 0)
      0,1: g(1, 2, 0)
      0,2: g(1, 0, 0)
      1,0: g(1, 2, 0)
      1,1: g(1, 2, 3)
      1,2: g(1, 0, 3)
  -
    id: 2d-kwargs-dim
    partials: multipartial[2,3](g, a=1, b=dim[0](2, 3), c=dim[1](4, 5, 6))
    expected:
      0,0: g(a=1, b=2, c=4)
      0,1: g(a=1, b=2, c=5)
      0,2: g(a=1, b=2, c=6)
      1,0: g(a=1, b=3, c=4)
      1,1: g(a=1, b=3, c=5)
      1,2: g(a=1, b=3, c=6)
  -
    id: 2d-kwargs-rows-cols
    partials: multipartial[2,3](g, a=1, b=rows(2, 3), c=cols(4, 5, 6))
    expected:
      0,0: g(a=1, b=2, c=4)
      0,1: g(a=1, b=2, c=5)
      0,2: g(a=1, b=2, c=6)
      1,0: g(a=1, b=3, c=4)
      1,1: g(a=1, b=3, c=5)
      1,2: g(a=1, b=3, c=6)
  -
    id: 2d-kwargs-put-int
    partials: multipartial[2,3](g, a=1, b=put[0,0](2, 0), c=put[1,2](3, 0))
    expected:
      0,0: g(a=1, b=2, c=0)
      0,1: g(a=1, b=0, c=0)
      0,2: g(a=1, b=0, c=0)
      1,0: g(a=1, b=0, c=0)
      1,1: g(a=1, b=0, c=0)
      1,2: g(a=1, b=0, c=3)
  -
    id: 2d-kwargs-put-slice
    partials: multipartial[2,3](g, a=1, b=put[:,:2](2, 0), c=put[1:,1:](3, 0))
    expected:
      0,0: g(a=1, b=2, c=0)
      0,1: g(a=1, b=2, c=0)
      0,2: g(a=1, b=0, c=0)
      1,0: g(a=1, b=2, c=0)
      1,1: g(a=1, b=2, c=3)
      1,2: g(a=1, b=0, c=3)
  -
    id: 2d-infer-shape
    partials: multipartial[:,:](g, 1, dim[0](2, 3), dim[1](4, 5, 6))
    expected:
      0,0: g(1, 2, 4)
      0,1: g(1, 2, 5)
      0,2: g(1, 2, 6)
      1,0: g(1, 3, 4)
      1,1: g(1, 3, 5)
      1,2: g(1, 3, 6)
